// SPDX-License-Identifier: MIT

pragma solidity ^0.8.20;
// solhint-disable gas-custom-errors

import {Test} from "forge-std/Test.sol";
import "forge-std/console.sol";

import {UpgradeableBeacon} from "@openzeppelin/contracts-v4/proxy/beacon/UpgradeableBeacon.sol";
import {BeaconProxy} from "@openzeppelin/contracts-v4/proxy/beacon/BeaconProxy.sol";

import {BridgedStandardERC20} from "contracts/bridge/BridgedStandardERC20.sol";
import {L2AssetRouter} from "contracts/bridge/asset-router/L2AssetRouter.sol";
import {IL2NativeTokenVault} from "contracts/bridge/ntv/IL2NativeTokenVault.sol";
import {DataEncoding} from "contracts/common/libraries/DataEncoding.sol";

import {L2_ASSET_ROUTER_ADDR, L2_NATIVE_TOKEN_VAULT_ADDR, L2_BRIDGEHUB_ADDR, L2_TO_L1_MESSENGER_SYSTEM_CONTRACT_ADDR, L2_TO_L1_MESSENGER_SYSTEM_CONTRACT, L2_MESSAGE_ROOT_STORAGE, L2_INTEROP_ACCOUNT_ADDR} from "contracts/common/l2-helpers/L2ContractAddresses.sol";
import {Transaction} from "contracts/common/l2-helpers/L2ContractHelper.sol";
import {ETH_TOKEN_ADDRESS, SETTLEMENT_LAYER_RELAY_SENDER} from "contracts/common/Config.sol";

import {AddressAliasHelper} from "contracts/vendor/AddressAliasHelper.sol";
import {BridgehubMintCTMAssetData} from "contracts/bridgehub/IBridgehub.sol";
import {IAdmin} from "contracts/state-transition/chain-interfaces/IAdmin.sol";
import {IL2AssetRouter} from "contracts/bridge/asset-router/IL2AssetRouter.sol";
import {IL1Nullifier} from "contracts/bridge/interfaces/IL1Nullifier.sol";
import {IL1AssetRouter} from "contracts/bridge/asset-router/IL1AssetRouter.sol";
import {IAssetRouterBase, NEW_ENCODING_VERSION} from "contracts/bridge/asset-router/IAssetRouterBase.sol";
import {IBridgehub} from "contracts/bridgehub/IBridgehub.sol";

import {IChainTypeManager} from "contracts/state-transition/IChainTypeManager.sol";
import {IZKChain} from "contracts/state-transition/chain-interfaces/IZKChain.sol";

import {DeployUtils} from "deploy-scripts/DeployUtils.s.sol";
import {TestnetERC20Token} from "contracts/dev-contracts/TestnetERC20Token.sol";

import {SharedL2ContractDeployer, SystemContractsArgs} from "./_SharedL2ContractDeployer.sol";
import {BridgehubL2TransactionRequest, L2CanonicalTransaction, L2Message, L2Log, TxStatus, InteropCallStarter, InteropCall, BundleMetadata, InteropBundle, InteropTrigger, GasFields, InteropCallRequest, BUNDLE_IDENTIFIER, TRIGGER_IDENTIFIER} from "contracts/common/Messaging.sol";
import {DummyL2StandardTriggerAccount} from "../../../../../contracts/dev-contracts/test/DummyL2StandardTriggerAccount.sol";

abstract contract L2InteropTestAbstract is Test, SharedL2ContractDeployer {
    function test_requestL2TransactionDirectWithCalldata() public {
        // Note: get this from real local txs
        bytes
            memory data = hex"d52471c1000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001f9000000000000000000000000000000000000000000000001158e460913d000000000000000000000000000009ca26d77cde9cff9145d06725b400b2ec4bbc6160000000000000000000000000000000000000000000000008ac7230489e8000000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000023c34600000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000001400000000000000000000000009ca26d77cde9cff9145d06725b400b2ec4bbc61600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

        vm.mockCall(
            L2_BRIDGEHUB_ADDR,
            abi.encodeWithSelector(IBridgehub.baseTokenAssetId.selector),
            abi.encode(ETH_TOKEN_ADDRESS)
        );
        vm.mockCall(
            L2_TO_L1_MESSENGER_SYSTEM_CONTRACT_ADDR,
            abi.encodeWithSelector(L2_TO_L1_MESSENGER_SYSTEM_CONTRACT.sendToL1.selector),
            abi.encode(bytes32(0))
        );
        address recipient = L2_BRIDGEHUB_ADDR;
        // (bool success, ) = recipient.call(data);
        // assertTrue(success);
    }

    function test_executeInterop() public {
        vm.deal(address(0x0000000000000000000000000000000000010009), 1 ether);
        vm.deal(L2_INTEROP_ACCOUNT_ADDR, 1 ether);

        DummyL2StandardTriggerAccount account = new DummyL2StandardTriggerAccount();
        bytes memory emptyData = "";
        vm.mockCall(
            address(L2_MESSAGE_ROOT_STORAGE),
            abi.encodeCall(L2_MESSAGE_ROOT_STORAGE.msgRoots, (271, 33)),
            hex"b234d5f38b97de6f6fd34afec69d01a6ffd3e04ac79a1dc4e60ee242508f455e"
        );
        vm.mockCall(address(0x000000000000000000000000000000000000800A), emptyData, emptyData);
        vm.mockCall(address(0x0000000000000000000000000000000000008006), emptyData, abi.encode(L2_INTEROP_ACCOUNT_ADDR));
        vm.mockCall(address(0x000000000000000000000000000000000001000b), emptyData, hex"fcb04e9c324c5900cb7006a8361d76b1add5e16f992241b77ba7cb0d83d4449f");
        // Note: print this out from interop.test.ts integration test.
        Transaction memory txData = Transaction({
            txType: 113,
            from: uint256(uint160(0x000000000000000000000000000000000001000d)),
            to: uint256(uint160(0x0000000000000000000000000000000000010009)), 
            gasLimit: 600000000,
            gasPerPubdataByteLimit: 800,
            maxFeePerGas: 200000000,
            maxPriorityFeePerGas: 0,
            paymaster: uint256(uint160(0x0000000000000000000000000000000000000000)),
            nonce: 2,
            value: 0,
            reserved: [uint256(0), 0, 0, 0],
            data: hex"000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000005c00000000000000000000000000000000000000000000000000000000000000560000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001040000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000001000d0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000800ac884fd1000000000000000000000000000000000000000000000000000000000000010ff07385b73519c29c95cd0c5bba9b526a03a99b70dc610a76b173782d0d721a02000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000876fc1bea35739fe8ba48fd0d6a26209cc904dd9000000000000000000000000f787846e5a5c8846ca74d3cc134e1d75784f65d600000000000000000000000060f4a17391d8cbb6c8e5e9de41d7abeb41e3db2f000000000000000000000000000000000000000000000000016345785d8a000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000001c101000000000000000000000000000000000000000000000000000000000000010f000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000180000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000007546f6b656e204100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002414100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008c00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000010f0000000000000000000000000000000000000000000000000000000000000021000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000ad0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000800ac884fd1000000000000000000000000000000000000000000000000000000000000010ff07385b73519c29c95cd0c5bba9b526a03a99b70dc610a76b173782d0d721a02000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000876fc1bea35739fe8ba48fd0d6a26209cc904dd9000000000000000000000000f787846e5a5c8846ca74d3cc134e1d75784f65d600000000000000000000000060f4a17391d8cbb6c8e5e9de41d7abeb41e3db2f000000000000000000000000000000000000000000000000016345785d8a000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000001c101000000000000000000000000000000000000000000000000000000000000010f000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000180000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000007546f6b656ef0001000000000000000000000000000000000000000000000000000000003b116d9634e575ca873ea8002f41fc9b5788c83120d2f51d8e28493fd7db30c3d40d85e3655c514c7c63aa4581fd587023d3686698ce06df8f37823cce575a4ee3697c7f33c31a9b0f0aeb8542287d0d21e8c4cf82163d0c44c7a98aa11aa111199cc5812543ddceeddd0fc82807646a4899444240db2c0d2f20c3cceb5f51fae4733f281f18ba3ea8775dd62d2fcd84011c8c938f16ea5790fd29a03bf8db891798a1fd9c8fbb818c98cff190daa7cc10b6e5ac9716b4a2649f7c2ebcef227266d7c5983afe44cf15ea8cf565b34c6c31ff0cb4dd744524f7842b942d08770db04e5ee349086985f74b73971ce9dfe76bbed95c84906c5dffd96504e1e5396cac506ecb5465659b3a927143f6d724f91d8d9c4bdb2463aee111d9aa869874db124b05ec272cecd7538fdafe53b6628d31188ffb6f345139aac3c3c1fd2e470fc3be9cbd19304d84cca3d045e06b8db3acd68c304fc9cd4cbffe6d18036cb13ffef7bd9f889811e59e4076a0174087135f080177302763019adaf531257e3a87a707d1c62d8be699d34cb74804fdd7b4c568b6c1a821066f126c680d4b83e00bf6e093070e0389d2e529d60fadb855fdded54976ec50ac709e3a36ceaa64c291e4ed1ec13a28c40715db6399f6f99ce04e5f19d60ad3ff6831f098cb6cf75944",
            signature: hex"00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000876fc1bea35739fe8ba48fd0d6a26209cc904dd9000000000000000000000000876fc1bea35739fe8ba48fd0d6a26209cc904dd900000000000000000000000000000000000000000000000000000000000008800000000000000000000000000000000000000000000000000000000000000220000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001040000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000001000d0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000800a000000000000000000000000000000000000000000000000000000000000800100000000000000000000000000000000000000000000000002c68af0bb14000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f787846e5a5c8846ca74d3cc134e1d75784f65d6000000000000000000000000876fc1bea35739fe8ba48fd0d6a26209cc904dd900000000000000000000000000000000000000000000000002c68af0bb1400000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005800000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000010f0000000000000000000000000000000000000000000000000000000000000021000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ad0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000800a000000000000000000000000000000000000000000000000000000000000800100000000000000000000000000000000000000000000000002c68af0bb14000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f787846e5a5c8846ca74d3cc134e1d75784f65d6000000000000000000000000876fc1bea35739fe8ba48fd0d6a26209cc904dd900000000000000000000000000000000000000000000000002c68af0bb140000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010f0001000000000000000000000000000000000000000000000000000000001d567f4aa673f831fdc7cc3878df4e04b90443e00fc571b9e8ba1fce660a98cad40d85e3655c514c7c63aa4581fd587023d3686698ce06df8f37823cce575a4ee3697c7f33c31a9b0f0aeb8542287d0d21e8c4cf82163d0c44c7a98aa11aa111199cc5812543ddceeddd0fc82807646a4899444240db2c0d2f20c3cceb5f51fae4733f281f18ba3ea8775dd62d2fcd84011c8c938f16ea5790fd29a03bf8db891798a1fd9c8fbb818c98cff190daa7cc10b6e5ac9716b4a2649f7c2ebcef227266d7c5983afe44cf15ea8cf565b34c6c31ff0cb4dd744524f7842b942d08770db04e5ee349086985f74b73971ce9dfe76bbed95c84906c5dffd96504e1e5396cac506ecb5465659b3a927143f6d724f91d8d9c4bdb2463aee111d9aa869874db124b05ec272cecd7538fdafe53b6628d31188ffb6f345139aac3c3c1fd2e470fc3be9cbd19304d84cca3d045e06b8db3acd68c304fc9cd4cbffe6d18036cb13ffef7bd9f889811e59e4076a0174087135f080177302763019adaf531257e3a87a707d1c62d8be699d34cb74804fdd7b4c568b6c1a821066f126c680d4b83e00bf6e093070e0389d2e529d60fadb855fdded54976ec50ac709e3a36ceaa64c291e4ed1ec13a28c40715db6399f6f99ce04e5f19d60ad3ff6831f098cb6cf7594400000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000010f0000000000000000000000000000000000000000000000000000000000000021000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000002c000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000010008000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000104000000000000000000000000876fc1bea35739fe8ba48fd0d6a26209cc904dd9000000000000000000000000000000000000000000000000000000000001000d7a1f3d0b4e7d46a83be4d663636762e0cf01605539d2d783394af0abae1e674df59ca25ba680accf4f6dfbe1f080cde2b6e4cf0dc5ecd209619220b6177c604400000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000023c346000000000000000000000000000000000000000000000000000000000000000320000000000000000000000000876fc1bea35739fe8ba48fd0d6a26209cc904dd9000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010f00010000000000000000000000000000000000000000000000000000000072abee45b59e344af8a6e520241c4744aff26ed411f4c4b00f8af09adada43bada11a602c1c0534c9e208d716a8dc67106e8d915ec62ebd23d09b6cfed95990fe3697c7f33c31a9b0f0aeb8542287d0d21e8c4cf82163d0c44c7a98aa11aa111199cc5812543ddceeddd0fc82807646a4899444240db2c0d2f20c3cceb5f51fae4733f281f18ba3ea8775dd62d2fcd84011c8c938f16ea5790fd29a03bf8db891798a1fd9c8fbb818c98cff190daa7cc10b6e5ac9716b4a2649f7c2ebcef227266d7c5983afe44cf15ea8cf565b34c6c31ff0cb4dd744524f7842b942d08770db04e5ee349086985f74b73971ce9dfe76bbed95c84906c5dffd96504e1e5396cac506ecb5465659b3a927143f6d724f91d8d9c4bdb2463aee111d9aa869874db124b05ec272cecd7538fdafe53b6628d31188ffb6f345139aac3c3c1fd2e470fc3be9cbd19304d84cca3d045e06b8db3acd68c304fc9cd4cbffe6d18036cb13ffef7bd9f889811e59e4076a0174087135f080177302763019adaf531257e3a87a707d1c62d8be699d34cb74804fdd7b4c568b6c1a821066f126c680d4b83e00bf6e093070e0389d2e529d60fadb855fdded54976ec50ac709e3a36ceaa64c291e4ed1ec13a28c40715db6399f6f99ce04e5f19d60ad3ff6831f098cb6cf75944",
            factoryDeps: new bytes32[](0),
            paymasterInput: "0x",
            reservedDynamic: ""
        });

        bool success = account.process(txData);
        require(success);
    }

}
